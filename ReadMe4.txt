Никита Семенихин, здравствуйте!

В папке Lesson_4 выполнено ДЗ к уроку №4.

Во вложенных папках находятся соответствующие задания.

Папка 1. Протестируйте поиск строки в HashSet и в массиве.
Заполните массив и HastSet случайными строками, не менее 10 000 строк. Строки можно сгенерировать. Потом выполните замер производительности проверки наличия строки в массиве и HashSet. Выложите код и результат замеров.

Тестирование проводил при количестве строк 10_000.
Вывод результатов:
1) При длине 1 строки 100 символов скорость поиска в массиве - 1 мс, в HashSet - 1 мс.
2) При длине 1 строки 1_000 символов скорость поиска в массиве - 1 мс, в HashSet - 9 мс.
3) При длине 1 строки 10_000 символов скорость поиска в массиве - 1 мс, в HashSet - 84 мс.
4) При длине 1 строки 100_000 символов скорость поиска в массиве - 3 мс, в HashSet - 830 мс.
5) При длине 1 строки 1000_000 символов скорость поиска в массиве - 22 мс, в HashSet - 8_129 мс. При этом тестировании при генерации строк было использовано 26,3 Gb оперативной памяти :)
6) При тестировании 100_000_000 строк и длиной 1 строки 100 символов скорость поиска в массиве - 1_987 мс, в HashSet - 10_618 мс. При этом тестировании при генерации строк было использовано 30 Gb оперативной памяти :)


Папка 2. Реализуйте класс двоичного дерева поиска с операциями вставки, удаления, поиска. Дерево должно быть сбалансированным (это требование не обязательно). Также напишите метод вывода в консоль дерева, чтобы увидеть, насколько корректно работает ваша реализация (* это со зведочкой).

Реализованы операции: вставки, удаления, поиска, подсчета количества элементов дерева, вывод на экран дерева.


Задания были интересным, надо было подумать.

Студент Волощук Антон. Спасибо!